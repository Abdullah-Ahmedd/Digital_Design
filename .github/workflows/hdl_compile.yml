name: Verilog/VHDL Compilation Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  compile-hdl:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install HDL tools
      run: |
        sudo apt-get update
        sudo apt-get install -y iverilog ghdl

    - name: Find all HDL files
      run: |
        echo "Finding all .v and .vhdl files..."
        find . -name "*.v" -type f > verilog_files.txt || true
        find . -name "*.vhdl" -type f > vhdl_files.txt || true
        find . -name "*.vhd" -type f >> vhdl_files.txt || true
        
        echo "Found Verilog files:"
        cat verilog_files.txt || echo "No Verilog files found"
        echo "Found VHDL files:"
        cat vhdl_files.txt || echo "No VHDL files found"
        
        # Count files properly, handling empty files
        VERILOG_COUNT=$(cat verilog_files.txt | wc -l)
        VHDL_COUNT=$(cat vhdl_files.txt | wc -l)
        
        echo "VERILOG_COUNT=$VERILOG_COUNT" >> $GITHUB_ENV
        echo "VHDL_COUNT=$VHDL_COUNT" >> $GITHUB_ENV
        
        echo "Verilog files count: $VERILOG_COUNT"
        echo "VHDL files count: $VHDL_COUNT"

    - name: Initialize status variables
      run: |
        echo "COMPILATION_FAILED=false" >> $GITHUB_ENV
        echo "VERILOG_RESULTS=" >> $GITHUB_ENV
        echo "VHDL_RESULTS=" >> $GITHUB_ENV

    - name: Compile Verilog files
      if: env.VERILOG_COUNT != '0'
      run: |
        echo "========================================="
        echo "           VERILOG COMPILATION"
        echo "========================================="
        
        success_count=0
        error_count=0
        successful_files=""
        failed_files=""
        has_errors=false
        
        # Process each Verilog file
        while IFS= read -r file; do
          if [ -n "$file" ]; then
            echo ""
            echo "üîß Compiling: $file"
            echo "----------------------------------------"
            
            if [ ! -f "$file" ]; then
              echo "‚ùå FILE NOT FOUND: $file"
              failed_files="${failed_files}$file (File not found)\n"
              ((error_count++))
              has_errors=true
            elif iverilog -t null "$file" > /dev/null 2>&1; then
              echo "‚úÖ SUCCESS: $file"
              successful_files="${successful_files}$file\n"
              ((success_count++))
            else
              echo "‚ùå COMPILATION FAILED: $file"
              error_output=$(iverilog -t null "$file" 2>&1)
              echo "Error: $error_output"
              failed_files="${failed_files}$file (Compilation error)\n"
              ((error_count++))
              has_errors=true
            fi
          fi
        done < verilog_files.txt
        
        echo ""
        echo "========================================="
        echo "        VERILOG COMPILATION SUMMARY"
        echo "========================================="
        echo "‚úÖ Successfully compiled: $success_count files"
        echo "‚ùå Failed to compile: $error_count files"
        
        # Only set COMPILATION_FAILED=true if there were actual errors
        if [ "$has_errors" = true ]; then
          echo "COMPILATION_FAILED=true" >> $GITHUB_ENV
        fi
        
        # Store results
        {
          echo "VERILOG_RESULTS<<EOF"
          echo "Success: $success_count, Failed: $error_count"
          if [ -n "$successful_files" ]; then
            echo "Successful files:"
            echo -e "$successful_files"
          fi
          if [ -n "$failed_files" ]; then
            echo "Failed files:"
            echo -e "$failed_files"
          fi
          echo "EOF"
        } >> $GITHUB_ENV

    - name: Compile VHDL files
      if: env.VHDL_COUNT != '0'
      run: |
        echo "========================================="
        echo "            VHDL COMPILATION"
        echo "========================================="
        
        success_count=0
        error_count=0
        successful_files=""
        failed_files=""
        has_errors=false
        
        # Process each VHDL file
        while IFS= read -r file; do
          if [ -n "$file" ]; then
            echo ""
            echo "üîß Compiling: $file"
            echo "----------------------------------------"
            
            if [ ! -f "$file" ]; then
              echo "‚ùå FILE NOT FOUND: $file"
              failed_files="${failed_files}$file (File not found)\n"
              ((error_count++))
              has_errors=true
            elif ghdl -s "$file" > /dev/null 2>&1; then
              echo "‚úÖ SUCCESS: $file"
              successful_files="${successful_files}$file\n"
              ((success_count++))
            else
              echo "‚ùå COMPILATION FAILED: $file"
              error_output=$(ghdl -s "$file" 2>&1)
              echo "Error: $error_output"
              failed_files="${failed_files}$file (Compilation error)\n"
              ((error_count++))
              has_errors=true
            fi
          fi
        done < vhdl_files.txt
        
        echo ""
        echo "========================================="
        echo "         VHDL COMPILATION SUMMARY"
        echo "========================================="
        echo "‚úÖ Successfully compiled: $success_count files"
        echo "‚ùå Failed to compile: $error_count files"
        
        # Only set COMPILATION_FAILED=true if there were actual errors
        if [ "$has_errors" = true ]; then
          echo "COMPILATION_FAILED=true" >> $GITHUB_ENV
        fi
        
        # Store results
        {
          echo "VHDL_RESULTS<<EOF"
          echo "Success: $success_count, Failed: $error_count"
          if [ -n "$successful_files" ]; then
            echo "Successful files:"
            echo -e "$successful_files"
          fi
          if [ -n "$failed_files" ]; then
            echo "Failed files:"
            echo -e "$failed_files"
          fi
          echo "EOF"
        } >> $GITHUB_ENV

    - name: Generate final summary
      run: |
        echo ""
        echo "========================================="
        echo "          FINAL COMPILATION SUMMARY"
        echo "========================================="
        echo ""
        
        total_files=$((VERILOG_COUNT + VHDL_COUNT))
        echo "üìä OVERALL RESULTS:"
        echo "   ‚Ä¢ Total files processed: $total_files"
        echo "   ‚Ä¢ Verilog files: $VERILOG_COUNT"
        echo "   ‚Ä¢ VHDL files: $VHDL_COUNT"
        echo ""
        
        if [ -n "$VERILOG_RESULTS" ]; then
          echo "üîß VERILOG RESULTS:"
          echo "$VERILOG_RESULTS" | sed 's/^/   /'
          echo ""
        fi
        
        if [ -n "$VHDL_RESULTS" ]; then
          echo "üîß VHDL RESULTS:"
          echo "$VHDL_RESULTS" | sed 's/^/   /'
          echo ""
        fi
        
        echo "========================================="

    - name: Generate compilation report
      run: |
        echo "## üìä HDL Compilation Report" > compilation_report.md
        echo "" >> compilation_report.md
        echo "### üìã Summary" >> compilation_report.md
        echo "- **Verilog files found:** $VERILOG_COUNT" >> compilation_report.md
        echo "- **VHDL files found:** $VHDL_COUNT" >> compilation_report.md
        echo "- **Total files:** $((VERILOG_COUNT + VHDL_COUNT))" >> compilation_report.md
        echo "" >> compilation_report.md
        
        if [ "${COMPILATION_FAILED:-false}" = "true" ]; then
          echo "### ‚ùå Compilation Status: FAILED" >> compilation_report.md
          echo "" >> compilation_report.md
          echo "**Issues detected during compilation.**" >> compilation_report.md
          echo "" >> compilation_report.md
          echo "#### üîç Troubleshooting Steps:" >> compilation_report.md
          echo "1. Review the detailed error messages above" >> compilation_report.md
          echo "2. Check syntax and module/entity declarations" >> compilation_report.md
          echo "3. Verify all dependencies are present" >> compilation_report.md
          echo "4. Ensure proper library inclusions" >> compilation_report.md
          echo "" >> compilation_report.md
          echo "#### üìù Next Actions:" >> compilation_report.md
          echo "- Fix the compilation errors listed in the CI logs" >> compilation_report.md
          echo "- Test locally with the same compiler versions" >> compilation_report.md
          echo "- Consider adding testbenches for verification" >> compilation_report.md
        else
          echo "### ‚úÖ Compilation Status: SUCCESS" >> compilation_report.md
          echo "" >> compilation_report.md
          echo "**All HDL files compiled successfully!** üéâ" >> compilation_report.md
          echo "" >> compilation_report.md
          echo "Your code passes basic syntax and compilation checks." >> compilation_report.md
          echo "" >> compilation_report.md
          echo "#### üöÄ Recommended Next Steps:" >> compilation_report.md
          echo "- Consider adding simulation testbenches" >> compilation_report.md
          echo "- Run synthesis for target FPGA/ASIC" >> compilation_report.md
          echo "- Perform timing analysis if applicable" >> compilation_report.md
        fi
        
        cat compilation_report.md

    - name: Upload compilation report
      uses: actions/upload-artifact@v4
      with:
        name: compilation-report
        path: compilation_report.md

    - name: Check final status and exit
      run: |
        echo ""
        echo "========================================="
        echo "              FINAL STATUS"
        echo "========================================="
        echo ""
        
        if [ "${COMPILATION_FAILED:-false}" = "true" ]; then
          echo "‚ùå COMPILATION FAILED"
          echo ""
          echo "Some HDL files failed to compile. Please check the error messages above."
          echo "Fix the compilation errors and try again."
          echo ""
          echo "========================================="
          exit 1
        else
          echo "‚úÖ COMPILATION SUCCESSFUL"
          echo ""
          echo "üéâ All HDL files compiled successfully!"
          echo ""
          echo "Your code passes basic syntax and compilation checks."
          echo "Consider adding testbenches and running synthesis next."
          echo ""
          echo "========================================="
          # Exit with success code 0 - this will show green checkmark
        fi
