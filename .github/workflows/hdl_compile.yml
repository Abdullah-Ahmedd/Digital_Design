name: Verilog/VHDL Compilation Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  compile-hdl:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install HDL tools
      run: |
        sudo apt-get update
        sudo apt-get install -y iverilog ghdl

    - name: Find all HDL files
      run: |
        echo "Finding all .v and .vhdl files..."
        find . -name "*.v" -type f > verilog_files.txt
        find . -name "*.vhdl" -type f > vhdl_files.txt
        find . -name "*.vhd" -type f >> vhdl_files.txt
        
        echo "Found Verilog files:"
        cat verilog_files.txt
        echo "Found VHDL files:"
        cat vhdl_files.txt
        
        echo "VERILOG_COUNT=$(wc -l < verilog_files.txt)" >> $GITHUB_ENV
        echo "VHDL_COUNT=$(wc -l < vhdl_files.txt)" >> $GITHUB_ENV

    - name: Compile Verilog files
      if: env.VERILOG_COUNT != '0'
      run: |
        echo "========================================="
        echo "           VERILOG COMPILATION"
        echo "========================================="
        failed_files=""
        success_count=0
        error_count=0
        successful_files=""
        failed_details=""
        
        while IFS= read -r file; do
          if [ -n "$file" ]; then
            echo ""
            echo "üîß Compiling: $file"
            echo "----------------------------------------"
            
            # Capture both stdout and stderr
            if output=$(iverilog -t null "$file" 2>&1); then
              echo "‚úÖ SUCCESS: $file"
              successful_files="$successful_files$file\n"
              ((success_count++))
            else
              echo "‚ùå COMPILATION FAILED: $file"
              echo ""
              echo "üìç Error Details:"
              echo "$output" | sed 's/^/   /'
              echo ""
              echo "üí° Common Issues:"
              echo "   ‚Ä¢ Check syntax errors (missing semicolons, parentheses)"
              echo "   ‚Ä¢ Verify module declarations and port lists"
              echo "   ‚Ä¢ Ensure all referenced modules are available"
              echo "   ‚Ä¢ Check for undeclared variables or signals"
              echo "----------------------------------------"
              failed_files="$failed_files$file\n"
              # Store first line of error for summary
              error_line=$(echo "$output" | head -1)
              failed_details="$failed_details‚Ä¢ $file: $error_line\n"
              ((error_count++))
            fi
          fi
        done < verilog_files.txt
        
        echo ""
        echo "========================================="
        echo "        VERILOG COMPILATION SUMMARY"
        echo "========================================="
        echo "‚úÖ Successfully compiled: $success_count files"
        echo "‚ùå Failed to compile: $error_count files"
        
        echo ""
        echo "üìã DETAILED COMPILATION REPORT:"
        echo "----------------------------------------"
        
        if [ -n "$successful_files" ]; then
          echo "‚úÖ Successfully compiled files:"
          echo -e "$successful_files" | sed 's/^/   /'
          echo ""
        fi
        
        if [ -n "$failed_files" ]; then
          echo "‚ùå Failed files with errors:"
          echo -e "$failed_details" | sed 's/^/   /'
          echo "VERILOG_FAILED=true" >> $GITHUB_ENV
          echo "VERILOG_FAILED_DETAILS<<EOF" >> $GITHUB_ENV
          echo -e "$failed_details" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        else
          echo "üéâ All Verilog files compiled successfully!"
          echo "VERILOG_FAILED=false" >> $GITHUB_ENV
        fi
        
        echo "VERILOG_SUCCESS_FILES<<EOF" >> $GITHUB_ENV
        echo -e "$successful_files" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Compile VHDL files
      if: env.VHDL_COUNT != '0'
      run: |
        echo "========================================="
        echo "            VHDL COMPILATION"
        echo "========================================="
        failed_files=""
        success_count=0
        error_count=0
        successful_files=""
        failed_details=""
        
        while IFS= read -r file; do
          if [ -n "$file" ]; then
            echo ""
            echo "üîß Compiling: $file"
            echo "----------------------------------------"
            
            # Capture both stdout and stderr
            if output=$(ghdl -s "$file" 2>&1); then
              echo "‚úÖ SUCCESS: $file"
              successful_files="$successful_files$file\n"
              ((success_count++))
            else
              echo "‚ùå COMPILATION FAILED: $file"
              echo ""
              echo "üìç Error Details:"
              echo "$output" | sed 's/^/   /'
              echo ""
              echo "üí° Common Issues:"
              echo "   ‚Ä¢ Check entity/architecture declarations"
              echo "   ‚Ä¢ Verify port maps and signal assignments"
              echo "   ‚Ä¢ Ensure library and package declarations"
              echo "   ‚Ä¢ Check for syntax errors and missing keywords"
              echo "   ‚Ä¢ Verify data type compatibility"
              echo "----------------------------------------"
              failed_files="$failed_files$file\n"
              # Store first line of error for summary
              error_line=$(echo "$output" | head -1)
              failed_details="$failed_details‚Ä¢ $file: $error_line\n"
              ((error_count++))
            fi
          fi
        done < vhdl_files.txt
        
        echo ""
        echo "========================================="
        echo "         VHDL COMPILATION SUMMARY"
        echo "========================================="
        echo "‚úÖ Successfully compiled: $success_count files"
        echo "‚ùå Failed to compile: $error_count files"
        
        echo ""
        echo "üìã DETAILED COMPILATION REPORT:"
        echo "----------------------------------------"
        
        if [ -n "$successful_files" ]; then
          echo "‚úÖ Successfully compiled files:"
          echo -e "$successful_files" | sed 's/^/   /'
          echo ""
        fi
        
        if [ -n "$failed_files" ]; then
          echo "‚ùå Failed files with errors:"
          echo -e "$failed_details" | sed 's/^/   /'
          echo "VHDL_FAILED=true" >> $GITHUB_ENV
          echo "VHDL_FAILED_DETAILS<<EOF" >> $GITHUB_ENV
          echo -e "$failed_details" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        else
          echo "üéâ All VHDL files compiled successfully!"
          echo "VHDL_FAILED=false" >> $GITHUB_ENV
        fi
        
        echo "VHDL_SUCCESS_FILES<<EOF" >> $GITHUB_ENV
        echo -e "$successful_files" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Generate final summary
      run: |
        echo ""
        echo "========================================="
        echo "          FINAL COMPILATION SUMMARY"
        echo "========================================="
        echo ""
        
        # Build comprehensive summary
        total_success=0
        total_failed=0
        
        if [ "$VERILOG_COUNT" -gt 0 ]; then
          total_success=$((total_success + $(echo -e "$VERILOG_SUCCESS_FILES" | grep -c "\.v$" || echo 0)))
        fi
        
        if [ "$VHDL_COUNT" -gt 0 ]; then
          total_success=$((total_success + $(echo -e "$VHDL_SUCCESS_FILES" | grep -c -E "\.(vhdl|vhd)$" || echo 0)))
        fi
        
        echo "üìä OVERALL RESULTS:"
        echo "   ‚Ä¢ Total files processed: $((VERILOG_COUNT + VHDL_COUNT))"
        echo "   ‚Ä¢ Successfully compiled: $total_success"
        echo "   ‚Ä¢ Failed compilation: $((VERILOG_COUNT + VHDL_COUNT - total_success))"
        echo ""
        
        if [ -n "$VERILOG_SUCCESS_FILES" ] || [ -n "$VHDL_SUCCESS_FILES" ]; then
          echo "‚úÖ FILES COMPILED SUCCESSFULLY:"
          if [ -n "$VERILOG_SUCCESS_FILES" ]; then
            echo -e "$VERILOG_SUCCESS_FILES" | sed 's/^/   üìÑ /' | sed 's/$/  ‚úì/'
          fi
          if [ -n "$VHDL_SUCCESS_FILES" ]; then
            echo -e "$VHDL_SUCCESS_FILES" | sed 's/^/   üìÑ /' | sed 's/$/  ‚úì/'
          fi
          echo ""
        fi
        
        if [ "$VERILOG_FAILED" = "true" ] || [ "$VHDL_FAILED" = "true" ]; then
          echo "‚ùå FILES WITH COMPILATION ERRORS:"
          if [ -n "$VERILOG_FAILED_DETAILS" ]; then
            echo -e "$VERILOG_FAILED_DETAILS" | sed 's/^/   üî¥ /'
          fi
          if [ -n "$VHDL_FAILED_DETAILS" ]; then
            echo -e "$VHDL_FAILED_DETAILS" | sed 's/^/   üî¥ /'
          fi
          echo ""
        fi
        
        echo "========================================="

    - name: Generate compilation report
      run: |
        echo "## üìä HDL Compilation Report" > compilation_report.md
        echo "" >> compilation_report.md
        echo "### üìã Summary" >> compilation_report.md
        echo "- **Verilog files found:** $VERILOG_COUNT" >> compilation_report.md
        echo "- **VHDL files found:** $VHDL_COUNT" >> compilation_report.md
        echo "" >> compilation_report.md
        
        if [ "$VERILOG_FAILED" = "true" ] || [ "$VHDL_FAILED" = "true" ]; then
          echo "### ‚ùå Compilation Status: FAILED" >> compilation_report.md
          echo "" >> compilation_report.md
          echo "**Issues detected during compilation.**" >> compilation_report.md
          echo "" >> compilation_report.md
          echo "#### üîç Troubleshooting Steps:" >> compilation_report.md
          echo "1. Review the detailed error messages above" >> compilation_report.md
          echo "2. Check syntax and module/entity declarations" >> compilation_report.md
          echo "3. Verify all dependencies are present" >> compilation_report.md
          echo "4. Ensure proper library inclusions" >> compilation_report.md
          echo "" >> compilation_report.md
          echo "#### üìù Next Actions:" >> compilation_report.md
          echo "- Fix the compilation errors listed in the CI logs" >> compilation_report.md
          echo "- Test locally with the same compiler versions" >> compilation_report.md
          echo "- Consider adding testbenches for verification" >> compilation_report.md
        else
          echo "### ‚úÖ Compilation Status: SUCCESS" >> compilation_report.md
          echo "" >> compilation_report.md
          echo "**All HDL files compiled successfully!** üéâ" >> compilation_report.md
          echo "" >> compilation_report.md
          echo "Your code passes basic syntax and compilation checks." >> compilation_report.md
          echo "" >> compilation_report.md
          echo "#### üöÄ Recommended Next Steps:" >> compilation_report.md
          echo "- Consider adding simulation testbenches" >> compilation_report.md
          echo "- Run synthesis for target FPGA/ASIC" >> compilation_report.md
          echo "- Perform timing analysis if applicable" >> compilation_report.md
        fi
        
        cat compilation_report.md

    - name: Upload compilation report
      uses: actions/upload-artifact@v4
      with:
        name: compilation-report
        path: compilation_report.md

    - name: Fail job if compilation failed
      if: env.VERILOG_FAILED == 'true' || env.VHDL_FAILED == 'true'
      run: |
        echo ""
        echo "========================================="
        echo "           COMPILATION FAILED"
        echo "========================================="
        echo ""
        echo "‚ùå Build failed due to compilation errors."
        echo ""
        echo "üîç Review the detailed error messages above to identify:"
        echo "   ‚Ä¢ Syntax errors and their exact locations"
        echo "   ‚Ä¢ Missing declarations or undefined signals"
        echo "   ‚Ä¢ Type mismatches or compatibility issues"
        echo "   ‚Ä¢ Structural problems in your HDL code"
        echo ""
        echo "üìù To fix these issues:"
        echo "   1. Check the specific error messages for each file"
        echo "   2. Verify your code follows proper HDL syntax"
        echo "   3. Ensure all modules/entities are properly declared"
        echo "   4. Test compilation locally before pushing"
        echo ""
        echo "========================================="
        exit 1

    - name: Success message
      if: env.VERILOG_FAILED == 'false' && env.VHDL_FAILED == 'false'
      run: |
        echo "üéâ All HDL files compiled successfully!"
